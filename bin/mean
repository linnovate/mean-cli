#!/usr/bin/env node

'use strict';

// MEAN CLI.
var program = require('commander'),
  anonymizedData = require('../lib/controllers/anonymized-data'),
  _ = require('lodash');

// set program version
var version = require('../package').version;
program.version(version, '-v, --version');
program
  .command('init <name> [options]', 'Create a MEAN application in the current working directory')
  .command('postinstall', 'Run bower and npm install for packages')
  .command('preinstall', 'Install dependencies from mean.json')
  .command('install <module> [options]', 'Installs a MEAN module')
  .command('uninstall <module>', 'Uninstalls a MEAN module')
  .command('docs', 'Opens MEAN documentation in your local browser')
  .command('package <name> [options]', 'package')
  .command('list', 'List all installed packages')
  .command('status', 'Overall system status')
  .command('user <email> [options]', 'Manage users')
  .command('authorize', 'Authorize your client')
  .command('logout', 'Logout authorized client')
  .command('login', 'Login to the network and authorized client')
  .command('whoami', 'Identifies authorized user')
  .command('register', 'Registers a user on mean network')
  .command('addKey', 'Add SSH key to network.mean.io')
  .command('publish', 'Publishes a package on the mean network')
  .command('search', 'Searches for a package on the mean network')
  .command('disable <name>', 'disable user reporting')
  .command('enable <name>', 'enable user reporting')
  .option('--env [env]', 'Mean environment defaults to `development`')

.parse(process.argv);

// print help with no args
if (program.args.length < 1) {
  program.help();
}

if (program.rawArgs[2] !== 'init' && program.rawArgs[2] !== 'install')
  anonymizedData.create({
    cmd: program.rawArgs[2]
  });

// if there is a command, make sure it's valid
var commands = program.commands.map(function(command) {
  return command._name;
});

if (!_.includes(commands, program.args[0])) {
  console.log('mean: `' + program.rawArgs[2] + '` is not a mean command. See `mean --help`.');
  console.log();
  process.exit(1);
}
